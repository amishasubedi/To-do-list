{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : \"\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      }); // check for errors\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      } // transform data\n\n\n      const data = await response.json();\n      applyData(data); //   const loadedTasks = [];\n      //   for (const taskKey in data) {\n      //     loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      //   }\n      //   setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"names":["useState","useCallback","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Users/subed/OneDrive/Javascript/04-onwards-to-a-more-realistic-example/src/hooks/use-http.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : \"\",\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n\r\n      // check for errors\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      // transform data\r\n      const data = await response.json();\r\n      applyData(data);\r\n\r\n      //   const loadedTasks = [];\r\n      //   for (const taskKey in data) {\r\n      //     loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n      //   }\r\n      //   setTasks(loadedTasks);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMO,WAAW,GAAGN,WAAW,CAAC,OAAOO,aAAP,EAAsBC,SAAtB,KAAoC;IAClEL,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAf,EAAoB;QAC9CC,MAAM,EAAEL,aAAa,CAACK,MAAd,GAAuBL,aAAa,CAACK,MAArC,GAA8C,KADR;QAE9CC,OAAO,EAAEN,aAAa,CAACM,OAAd,GAAwBN,aAAa,CAACM,OAAtC,GAAgD,EAFX;QAG9CC,IAAI,EAAEP,aAAa,CAACO,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeT,aAAa,CAACO,IAA7B,CAArB,GAA0D;MAHlB,CAApB,CAA5B,CADE,CAOF;;MACA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACD,CAVC,CAYF;;;MACA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MACAZ,SAAS,CAACW,IAAD,CAAT,CAdE,CAgBF;MACA;MACA;MACA;MACA;IACD,CArBD,CAqBE,OAAOE,GAAP,EAAY;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACD;;IACDnB,YAAY,CAAC,KAAD,CAAZ;EACD,CA5B8B,EA4B5B,EA5B4B,CAA/B;EA8BA,OAAO;IACLD,SADK;IAELE,KAFK;IAGLE;EAHK,CAAP;AAKD,CAvCD;;GAAML,O;;AAyCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}